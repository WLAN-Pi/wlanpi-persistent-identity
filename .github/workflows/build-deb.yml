name: Build Debian Package

on:
  push:
    branches:
      - main
    paths-ignore: # ignore files that don't change build output
      - '**/*.md'
      - '*.md'
      - .github/dependabot.yml
      - .gitignore
      - LICENSE
  pull_request:
    branches:
      - main
    paths-ignore: # ignore files that don't change build output
      - '**/*.md'
      - '*.md'
      - .github/dependabot.yml
      - .gitignore
      - LICENSE
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: false
        default: 'main'

jobs:
  build-deb:
    name: Build and Package
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Determine branch name
        id: branch
        run: |
          # If triggered manually, use the input.
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RAW_BRANCH="${{ github.event.inputs.branch }}"
          # If triggered by a pull_request, use github.head_ref.
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            RAW_BRANCH="${{ github.head_ref }}"
          # Otherwise (push), parse the branch from GITHUB_REF.
          else
            RAW_BRANCH="${GITHUB_REF##*/}"
          fi

          # Replace slashes with dashes (Debian versions cannot have '/')
          SANITIZED_BRANCH=$(echo "$RAW_BRANCH" | tr '/' '-')

          echo "branch_name=$SANITIZED_BRANCH" >> "$GITHUB_ENV"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper devscripts lintian

      # 4) Generate version number using GITHUB_RUN_NUMBER + branch
      - name: Increment version number
        id: version
        run: |
          # If there's an existing changelog, parse its base version. Otherwise, start at 1.0.0
          if [ -f "debian/changelog" ]; then
            BASE_VERSION=$(dpkg-parsechangelog --show-field Version | cut -d'-' -f1)
          else
            BASE_VERSION="1.0.0"
          fi

          # Split version into major/minor/patch (assuming X.Y.Z format)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE_VERSION"

          # Use the sanitized branch name
          BRANCH_NAME="${{ env.branch_name }}"

          # Construct a valid Debian version (replace underscore with '+')
          NEW_VERSION="${MAJOR}.${MINOR}.${GITHUB_RUN_NUMBER}+${BRANCH_NAME}"

          # Update the Debian changelog
          export DEBFULLNAME="GitHub Actions"
          export DEBEMAIL="actions@github.com"
          dch --force-distribution -v "$NEW_VERSION" -D "unstable" "Automated build of version $NEW_VERSION"

          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build Debian package
        run: |
          dpkg-buildpackage -us -uc -b -d
          mkdir -p build
          mv ../*.deb build/

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: wlanpi-persistent-identity_${{ env.new_version }}
          path: build/*.deb

  slack-workflow-status:
    if: ${{ always() && (github.repository_owner == 'WLAN-Pi') && (! github.event.pull_request.head.repo.fork) }}
    name: Post Workflow Status to Slack
    needs: [ build-deb ]
    runs-on: ubuntu-24.04
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
